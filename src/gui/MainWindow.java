package gui;

import io.Values;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import model.App;
import model.Const;
import model.Ind;
import xfuzzy.AgravamientoImpacto;
import xfuzzy.Frecuencia;
import xfuzzy.FuzzyInferenceEngine;
import xfuzzy.VulnerabilidadDerrame;
import xfuzzy.VulnerabilidadEscape;
import xfuzzy.VulnerabilidadExplosion;
import xfuzzy.VulnerabilidadIncendio;

/**
 *
 * @author Anabel
 */
public class MainWindow extends javax.swing.JFrame {

    public HashMap<Ind, InputWindow> indWindow = new HashMap<>();
    public ImageIcon appIcon = new ImageIcon(getClass().getResource("/images/app_icon.png"));
    JFileChooser chooser = new JFileChooser(".");
    public static final int E = 4;
    double cai;
    double[] frec = new double[E];      // derrame, escape, explosion, incendio
    double[] vuln = new double[E];

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        initInputWindows();
        setIconImage(appIcon.getImage());
        chooser.setFileFilter(new ModelFileFilter());
    }
    
    private void initInputWindows(){
        try {
            for (Ind i : Ind.values()) {
                InputWindow inputWindow = new InputWindow(App.indicators.get(i));
                //inputWindow.setLocation(5, 5);
                App.setCentered(inputWindow);
                inputWindow.setIconImage(appIcon.getImage());
                indWindow.put(i, inputWindow);
            }
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private double[] infer(FuzzyInferenceEngine engine, double[] input) {
        return engine.crispInference(input);
    }

    private void calculateCAI() {
        double[] input1 = indWindow.get(Ind.FALTA_H).getInput();
        double[] input2 = indWindow.get(Ind.FALTA_R).getInput();

        double[] input = new double[input1.length + input2.length];
        System.arraycopy(input1, 0, input, 0, input1.length);
        System.arraycopy(input2, 0, input, input1.length, input2.length);

        cai = infer(new AgravamientoImpacto(), input)[0];
    }

    private void calculateFrec() {
        Frecuencia engine = new Frecuencia();
        double[] input;
        input = indWindow.get(Ind.FREC_DE).getInput();
        frec[0] = infer(engine, input)[0];
        input = indWindow.get(Ind.FREC_ES).getInput();
        frec[1] = infer(engine, input)[0];
        input = indWindow.get(Ind.FREC_EX).getInput();
        frec[2] = infer(engine, input)[0];
        input = indWindow.get(Ind.FREC_IN).getInput();
        frec[3] = infer(engine, input)[0];

    }

    private void calculateVuln() {
        double[] input;
        input = indWindow.get(Ind.VULN_DE).getInput();
        vuln[0] = infer(new VulnerabilidadDerrame(), input)[0];
        input = indWindow.get(Ind.VULN_ES).getInput();
        vuln[1] = infer(new VulnerabilidadEscape(), input)[0];
        input = indWindow.get(Ind.VULN_EX).getInput();
        vuln[2] = infer(new VulnerabilidadExplosion(), input)[0];
        input = indWindow.get(Ind.VULN_IN).getInput();
        vuln[3] = infer(new VulnerabilidadIncendio(), input)[0];
    }

    private double calculateIRT() {
        double irt = 0;
        for (int i = 0; i < E; i++) {
            irt += frec[i] * vuln[i];
        }
        irt *= (cai + 1);
        return irt / 8;       // Para normalizar el resultado (valor entre 0 y 1)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar = new javax.swing.JToolBar();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openModelMenuItem = new javax.swing.JMenuItem();
        saveModelMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        caiMenu = new javax.swing.JMenu();
        falta_hMenuItem = new javax.swing.JMenuItem();
        falta_rMenuItem = new javax.swing.JMenuItem();
        frecMenu = new javax.swing.JMenu();
        frec_esMenuItem = new javax.swing.JMenuItem();
        frec_deMenuItem = new javax.swing.JMenuItem();
        frec_exMenuItem = new javax.swing.JMenuItem();
        frec_inMenuItem = new javax.swing.JMenuItem();
        vulnMenu = new javax.swing.JMenu();
        vuln_esMenuItem = new javax.swing.JMenuItem();
        vuln_deMenuItem = new javax.swing.JMenuItem();
        vuln_exMenuItem = new javax.swing.JMenuItem();
        vuln_inMenuItem = new javax.swing.JMenuItem();
        calculateMenu = new javax.swing.JMenu();
        irtMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIDCIRT");
        setResizable(false);

        toolBar.setRollover(true);

        menuBar.setToolTipText("");

        fileMenu.setText("Archivo");

        openModelMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        openModelMenuItem.setText("Abrir modelo");
        openModelMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openModelMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openModelMenuItem);

        saveModelMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        saveModelMenuItem.setText("Guardar modelo");
        saveModelMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveModelMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveModelMenuItem);
        fileMenu.add(jSeparator1);

        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        closeMenuItem.setText("Cerrar");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Editar");

        caiMenu.setText("CAI");

        falta_hMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        falta_hMenuItem.setText("Falta de homeostasis");
        falta_hMenuItem.setName("FALTA_H"); // NOI18N
        falta_hMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        caiMenu.add(falta_hMenuItem);

        falta_rMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        falta_rMenuItem.setText("Falta de resilencia");
        falta_rMenuItem.setName("FALTA_R"); // NOI18N
        falta_rMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        caiMenu.add(falta_rMenuItem);

        editMenu.add(caiMenu);

        frecMenu.setText("Frecuencia");

        frec_esMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        frec_esMenuItem.setText("Escape");
        frec_esMenuItem.setName("FREC_ES"); // NOI18N
        frec_esMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        frecMenu.add(frec_esMenuItem);

        frec_deMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        frec_deMenuItem.setText("Derrame");
        frec_deMenuItem.setName("FREC_DE"); // NOI18N
        frec_deMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        frecMenu.add(frec_deMenuItem);

        frec_exMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        frec_exMenuItem.setText("Explosi√≥n");
        frec_exMenuItem.setName("FREC_EX"); // NOI18N
        frec_exMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        frecMenu.add(frec_exMenuItem);

        frec_inMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        frec_inMenuItem.setText("Incendio");
        frec_inMenuItem.setName("FREC_IN"); // NOI18N
        frec_inMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        frecMenu.add(frec_inMenuItem);

        editMenu.add(frecMenu);

        vulnMenu.setText("Vulnerabilidad");

        vuln_esMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        vuln_esMenuItem.setText("Escape");
        vuln_esMenuItem.setName("VULN_ES"); // NOI18N
        vuln_esMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        vulnMenu.add(vuln_esMenuItem);

        vuln_deMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        vuln_deMenuItem.setText("Derrame");
        vuln_deMenuItem.setName("VULN_DE"); // NOI18N
        vuln_deMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        vulnMenu.add(vuln_deMenuItem);

        vuln_exMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.CTRL_MASK));
        vuln_exMenuItem.setText("Explosi√≥n");
        vuln_exMenuItem.setName("VULN_EX"); // NOI18N
        vuln_exMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        vulnMenu.add(vuln_exMenuItem);

        vuln_inMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.CTRL_MASK));
        vuln_inMenuItem.setText("Incendio");
        vuln_inMenuItem.setName("VULN_IN"); // NOI18N
        vuln_inMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIndicatorActionPerformed(evt);
            }
        });
        vulnMenu.add(vuln_inMenuItem);

        editMenu.add(vulnMenu);

        menuBar.add(editMenu);

        calculateMenu.setText("Calcular");

        irtMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        irtMenuItem.setText("IRT");
        irtMenuItem.setToolTipText("Indice de Riesgo Tecnol√≥gico");
        irtMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irtMenuItemActionPerformed(evt);
            }
        });
        calculateMenu.add(irtMenuItem);

        menuBar.add(calculateMenu);

        helpMenu.setText("Ayuda");

        helpMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpMenuItem.setText("Ayuda");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);
        helpMenu.add(jSeparator2);

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        aboutMenuItem.setText("Acerca...");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openModelMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openModelMenuItemActionPerformed
        int showOpenDialog = chooser.showOpenDialog(this);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION) {
            Values.loadModel(chooser.getSelectedFile().getAbsolutePath());
        }

        indWindow.clear();
        initInputWindows();
        
        for (InputWindow iw : indWindow.values()) {
            iw.refreshShownValues();
        }
    }//GEN-LAST:event_openModelMenuItemActionPerformed

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        if (Desktop.isDesktopSupported()) {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.open(new File(Const.HELP_FILE));
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, Const.helpMessage);
        }
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void irtMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irtMenuItemActionPerformed
        calculateCAI();
        calculateFrec();
        calculateVuln();
        double irt = calculateIRT();
        ShowOutputWindow out = new ShowOutputWindow();
        out.setIrt(irt);
        out.showOutput();
    }//GEN-LAST:event_irtMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void showIndicatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showIndicatorActionPerformed
        JMenuItem source = (JMenuItem) evt.getSource();
        String i = source.getName();
        indWindow.get(Ind.valueOf(i)).open();
    }//GEN-LAST:event_showIndicatorActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        JOptionPane.showMessageDialog(this, Const.aboutMessage, Const.aboutTitle, JOptionPane.INFORMATION_MESSAGE, appIcon);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void saveModelMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveModelMenuItemActionPerformed
        int showSaveDialog = chooser.showSaveDialog(this);
        if (showSaveDialog == JFileChooser.APPROVE_OPTION) {
            String path = chooser.getSelectedFile().getAbsolutePath();
            if (!path.endsWith(Const.EXTENSION)) {
                path = path.concat(Const.EXTENSION);
            }
            for (InputWindow iw : indWindow.values()) {
                iw.refreshModelValues();
            }
            Values.saveModel(path);
            System.gc();
        }
    }//GEN-LAST:event_saveModelMenuItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu caiMenu;
    private javax.swing.JMenu calculateMenu;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem falta_hMenuItem;
    private javax.swing.JMenuItem falta_rMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu frecMenu;
    private javax.swing.JMenuItem frec_deMenuItem;
    private javax.swing.JMenuItem frec_esMenuItem;
    private javax.swing.JMenuItem frec_exMenuItem;
    private javax.swing.JMenuItem frec_inMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JMenuItem irtMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openModelMenuItem;
    private javax.swing.JMenuItem saveModelMenuItem;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JMenu vulnMenu;
    private javax.swing.JMenuItem vuln_deMenuItem;
    private javax.swing.JMenuItem vuln_esMenuItem;
    private javax.swing.JMenuItem vuln_exMenuItem;
    private javax.swing.JMenuItem vuln_inMenuItem;
    // End of variables declaration//GEN-END:variables
}